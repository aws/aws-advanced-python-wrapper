[tool.poetry]
name = "aws_advanced_python_wrapper"
version = "1.0.0"
description = "Amazon Web Services (AWS) Advanced Python Wrapper"
authors = ["Amazon Web Services"]
readme = "README.md"
license = "Apache-2.0"
include = ["CONTRIBUTING.md"]
repository = "https://github.com/awslabs/aws-advanced-python-wrapper"
documentation = "https://github.com/awslabs/aws-advanced-python-wrapper/docs/"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = "^3.8.1"
resourcebundle = "2.1.0"
boto3 = "^1.34.107"
toml = "^0.10.2"
aws-xray-sdk = "^2.13.0"
types_aws_xray_sdk = "^2.13.0"
opentelemetry-api = "^1.22.0"
opentelemetry-sdk = "^1.22.0"
requests = "^2.31.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
flake8 = "^6.0.0"
flake8-type-checking = "^2.9.0"
isort = "^5.13.2"
pep8-naming = "^0.13.3"
SQLAlchemy = "^2.0.30"
psycopg = "^3.1.19"
psycopg-binary = "^3.1.19"
mysql-connector-python = "^8.4.0"

[tool.poetry.group.test.dependencies]
boto3 = "^1.34.107"
coverage = "^7.5.1"
debugpy = "^1.8.1"
pydevd-pycharm = "^233.13763.5"
pytest = "^7.4.4"
pytest-mock = "^3.14.0"
pytest-html = "^4.1.1"
pytest-html-merger = "^0.0.10"
toxiproxy-python = "^0.1.1"
parameterized = "^0.9.0"
psycopg = "^3.1.19"
psycopg-binary = "^3.1.19"
mysql-connector-python = "^8.4.0"
opentelemetry-exporter-otlp = "^1.22.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.22.0"
opentelemetry-sdk-extension-aws = "^2.0.1"

[tool.isort]
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
no_lines_before = "LOCALFOLDER"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
filterwarnings = [
    'ignore:cache could not write path',
    'ignore:could not create cache path'
]

